extension java::GeneratorCommons;
extension functions::NamedElement;

cached List[uml::NamedElement] getAllElementsForTypesReport(uml::Package package):
    package.allOwnedElements().typeSelect(uml::NamedElement).select(e|e.isInGeneratorWhitelist()).select(e|e.hasStereotypeForTypesReport());
    
cached List[uml::Package] getPackagesForTypesReport(uml::Model model):
    model.getAllElementsForTypesReport().getNearestPackage().toSet().sortBy(e|e.qualifiedName());
    
private boolean hasStereotypeForTypesReport(uml::NamedElement element):
    getTypesReportStereotypes().exists(e|element.isStereotypeApplied(e));
    
cached String getDescriptionForMarkup(uml::NamedElement element): 
    element.ownedComment.first().body.trim().replaceAll("\n", "<br>");
    
cached List[JMM::POJO] getAllPOJOs(uml::Package package):
    package.ownedElement.typeSelect(JMM::POJO).select(e|e.isInGeneratorWhitelist()).sortBy(e|e.name);
    
cached List[JMM::JEAFEnumeration] getAllEnums(uml::Package package):
    package.ownedElement.typeSelect(JMM::JEAFEnumeration).select(e|e.isInGeneratorWhitelist()).sortBy(e|e.name);
    
cached List[uml::Package] getAllPAckagesForModelReport(uml::Package package):
    package.allOwnedElements().typeSelect(uml::Package).select(e|e.isInGeneratorWhitelist() && (e.getAllPOJOs().isEmpty == false || e.getAllEnums().isEmpty == false));
    
    