«IMPORT uml»
«IMPORT JMM»
«EXTENSION java::Naming»
«EXTENSION jeaf::Deprecation»

«EXTENSION functions::TypeChecks»

«EXTENSION functions::Class»
«EXTENSION functions::POJO»
«EXTENSION functions::ServiceObject»
«EXTENSION functions::DomainObject»
«EXTENSION functions::PersistentObject»
«EXTENSION functions::JEAFEnumeration»
«EXTENSION functions::Element»
«EXTENSION functions::Operation»
«EXTENSION functions::HeaderParam»
«EXTENSION functions::QueryParam»
«EXTENSION functions::BeanParam»
«EXTENSION functions::JEAFDeprecated»

«EXTENSION functions::EnumerationLiteral»

«EXTENSION org::openarchitectureware::util::stdlib::io»

«EXTENSION java::GeneratorCommons»
«EXTENSION functions::BreakingChange»
«EXTENSION functions::Property»
«EXTENSION functions::NamedElement»
«EXTENSION functions::SystemProperties»


«DEFINE BreakingChangesReport FOR Model»
«FILE getBreakingChangesReportFileName() res_gen-»
# «getBreakingChangesReportName()»

<br>
«EXPAND DueBreakingChanges -»
«IF groupBreakingChangesReportByPackage() -»
«FOREACH this.getPackagesForBreakingChangesReport() AS package-»
## Package `«package.qualifiedName()»`

«EXPAND BreakingChangesTablePerPackage FOR package.getBreakingChanges()»
<br>

«ENDFOREACH-»
«ELSE-»
«EXPAND BreakingChangesTable FOR this.getAllBreakingChanges()»
«ENDIF-»
«ENDFILE»
«ENDDEFINE»


«DEFINE BreakingChangesTablePerPackage FOR List[uml::NamedElement]-»
| Element  | Details    | Description  | Active with |
|----------|------------|--------------|:-----------:|
«IF this.isEmpty == false -»
    «FOREACH this AS change -»
        «IF change.isProperty() || change.isEnumerationLiteral() -»
| `«change.owner.asNamedElement().name»` | `«change.name»` | «change.getBreakingChangeDescription()» | «change.getBreakingChangeActiveWith()» | 
       «ELSEIF change.isParameter() -»
| `«change.owner.owner.asNamedElement().name».«change.owner.asNamedElement().name»` | `«change.name»` | «change.getBreakingChangeDescription()» | «change.getBreakingChangeActiveWith()» | 
       «ELSE -»
| `«change.name»` | | «change.getBreakingChangeDescription()» | «change.getBreakingChangeActiveWith()» | 
       «ENDIF-»
    «ENDFOREACH -»
«ELSE-»
| No breaking changes declared. |
«ENDIF-»
«ENDDEFINE»


«DEFINE DueBreakingChanges FOR Package»
«IF this.getAllDueBreakingChanges().size > 0 -»
## Breaking changes planned to be activated with next major release «IF nextMajorReleaseVersion().length > 0»`«nextMajorReleaseVersion()»`«ENDIF» (planned publishing date «nextMajorReleasePublishingDate()»)

	«EXPAND BreakingChangesTable FOR this.getAllDueBreakingChanges()»
<br>

«ENDIF-»«ENDDEFINE»


«DEFINE BreakingChangesTable FOR List[uml::NamedElement]-»
| Element  | Details    | Description  | Active with |
|----------|------------|--------------|:-----------:|
«IF this.isEmpty == false -»
    «FOREACH this AS change -»
        «IF change.isProperty() || change.isEnumerationLiteral() || change.isParameter() -»
| `«((uml::NamedElement) change.owner).fqn()»` | `«change.name»` | «change.getBreakingChangeDescription()» | «change.getBreakingChangeActiveWith()» | 
       «ELSE -»
| `«((uml::NamedElement) change).fqn()»` | | «change.getBreakingChangeDescription()» | «change.getBreakingChangeActiveWith()» | 
       «ENDIF-»
    «ENDFOREACH -»
«ELSE-»
| No breaking changes declared. |
«ENDIF-»
«ENDDEFINE»

«DEFINE BreakingChangesCSV FOR Model»
«FILE getBreakingChangesCSVFileName() res_gen-»
Element;Package;Details;Description;Active with;
«FOREACH this.getPackagesForBreakingChangesReport() AS package-»
«FOREACH package.getBreakingChanges() AS change-»
        «IF change.isProperty() || change.isEnumerationLiteral() -»
«change.owner.asNamedElement().name»;«package.qualifiedName()»;«change.name»;«change.getBreakingChangeDescription()»;«change.getBreakingChangeActiveWith()»; 
       «ELSEIF change.isParameter() -»
«change.owner.owner.asNamedElement().name».«change.owner.asNamedElement().name»;«package.qualifiedName()»;«change.name»;«change.getBreakingChangeDescription()»;«change.getBreakingChangeActiveWith()»; 
       «ELSE -»
«change.name»;«package.qualifiedName()»;«change.getBreakingChangeDescription()»;«change.getBreakingChangeActiveWith()»; 
       «ENDIF-»
«ENDFOREACH-»
«ENDFOREACH-»
«ENDFILE»
«ENDDEFINE»
