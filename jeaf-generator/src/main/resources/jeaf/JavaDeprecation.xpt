«IMPORT uml»
«IMPORT JMM»
«EXTENSION java::Naming»
«EXTENSION jeaf::Deprecation»

«EXTENSION functions::TypeChecks»

«EXTENSION functions::Class»
«EXTENSION functions::POJO»
«EXTENSION functions::ServiceObject»
«EXTENSION functions::DomainObject»
«EXTENSION functions::PersistentObject»
«EXTENSION functions::Enumeration»
«EXTENSION functions::JEAFEnumeration»
«EXTENSION functions::Element»
«EXTENSION functions::Operation»
«EXTENSION functions::HeaderParam»
«EXTENSION functions::QueryParam»
«EXTENSION functions::BeanParam»
«EXTENSION functions::JEAFDeprecated»
«EXTENSION functions::NamedElement»

«EXTENSION org::openarchitectureware::util::stdlib::io»

«EXTENSION java::GeneratorCommons»


«DEFINE JavaDeprecationReport FOR Model»
«FILE getJavaDeprecationReportFileName() res_gen-»
# «getJavaDeprecationReportName()»

<br>

«EXPAND DeprecationsForPackage FOREACH this.getPackagesForJavaDeprecationsReport() -»
«ENDFILE»
«ENDDEFINE»

«DEFINE DeprecationsForPackage FOR Package-»
## Package `«this.fqn()»`
«LET this.getJavaDeprecations() AS deprecations-»
«IF deprecations.isEmpty-»
No deprecations published.
«ENDIF-»

<br>

«IF deprecations.typeSelect(JEAFService).typeSelect(JEAFDeprecated).isEmpty == false -»
### Services with Deprecations 

<br>

| Service Name   | Description   | Deprecated since   | Planned to be removed   |
|----------------|---------------|:------------------:|:-----------------------:|
«FOREACH deprecations.typeSelect(JEAFService).typeSelect(JEAFDeprecated).sortBy(e|e.asNamedElement().fqn()).asNamedElement() AS service-»
| `«service.name»` | «service.getDeprecationDescriptionForMarkup()» | «service.getDeprecatedSince()» | «service.getDeprecationRemoval()» |
«ENDFOREACH-»
«IF deprecations.typeSelect(JEAFService).size == 0-»
| No services are marked as deprecated. |
«ENDIF-»

<br>

«ENDIF -»
«FOREACH deprecations.typeSelect(Operation).owner.typeSelect(JEAFService).toSet().sortBy(e|e.fqn()) AS service-»
«IF service.hasDeprecatedOperations() || true -»
#### `«service.name»`

| Operation   |  Parameter   | Description   | Deprecated since   | Planned to be removed   |
|-------------|--------------|---------------|:------------------:|:-----------------------:|
«FOREACH service.getDeprecatedOperations().sortBy(e|e.name) AS operation-»
| `«EXPAND OperationName FOR operation»` | | «operation.getDeprecationDescriptionForMarkup()» | «operation.getDeprecatedSince()» | «operation.getDeprecationRemoval()» |
    «IF operation.hasDeprecatedParameters()-»
        «FOREACH operation.getDeprecatedParameters() AS param-»
|   | `«EXPAND OperationParamName FOR param»` | «param.getDeprecationDescriptionForMarkup()» | «param.getDeprecatedSince()» | «param.getDeprecationRemoval()» |
        «ENDFOREACH-»
    «ENDIF-»
«ENDFOREACH-»

<br>

«ENDIF-»
«ENDFOREACH-»
«IF deprecations.select(e|e.isPOJO() || e.isServiceObject() || e.isDomainObject() || e.isPersistentObject()).sortBy(e|e.fqn()).isEmpty == false -»
### Classes with Deprecations

<br>

| Type   | Attribute   | Description   | Deprecated since   | Planned to be removed   |
|--------|-------------|---------------|:------------------:|:-----------------------:|
«FOREACH deprecations.select(e|e.isPOJO() || e.isServiceObject() || e.isDomainObject() || e.isPersistentObject()).sortBy(e|e.fqn()) AS element-»
| `«element.name»` | | «element.getDeprecationDescriptionForMarkup()» | «element.getDeprecatedSince()» | «element.getDeprecationRemoval()» |
    «IF element.asClass().hasDeprecatedProperties()-»
        «FOREACH element.asClass().getDeprecatedProperties() AS property-»
|   | `«property.name»` | «property.getDeprecationDescriptionForMarkup()» | «property.getDeprecatedSince()» | «property.getDeprecationRemoval()» |
        «ENDFOREACH-»
    «ENDIF-»
«ENDFOREACH-»
«IF deprecations.select(e|e.isPOJO() || e.isServiceObject() || e.isDomainObject() || e.isPersistentObject()).size == 0-»
| No classes are marked as deprecated. |
«ENDIF-»

<br>

«ENDIF-»
«IF deprecations.select(e|e.isJEAFEnumeration()).isEmpty == false -»
### Enumerations with Deprecations

<br>

| Enumeration   | Literal   | Description   | Deprecated since   | Planned to be removed   |
|---------------|-----------|---------------|:------------------:|:-----------------------:|
«FOREACH deprecations.select(e|e.isJEAFEnumeration()).select(e|e.hasJavaDeprecation()).sortBy(e|e.fqn()) AS element-»
| `«element.name»` | | «element.getDeprecationDescriptionForMarkup()» | «element.getDeprecatedSince()» | «element.getDeprecationRemoval()» |
    «IF element.asEnumeration().hasDeprecatedLiterals()-»
        «FOREACH element.asEnumeration().getDeprecatedLiterals() AS literal-»
|   | `«literal.name»` | «literal.getDeprecationDescriptionForMarkup()» | «literal.getDeprecatedSince()» | «literal.getDeprecationRemoval()» |
        «ENDFOREACH-»
    «ENDIF-»
«ENDFOREACH-»
«IF deprecations.select(e|e.isJEAFEnumeration()).select(e|e.hasJavaDeprecation()).size == 0-»
| No enumerations are marked as deprecated. |
«ENDIF-»

<br>

«ENDIF-»
«ENDLET-»
«ENDDEFINE»


«DEFINE OperationName FOR Operation-»
«name»(«FOREACH this.getInputParameters() AS param SEPARATOR ", "»«param.type.name»«ENDFOREACH»)«ENDDEFINE»

«DEFINE OperationParamName FOR Parameter-»
«this.type.name» «this.name»«ENDDEFINE»



