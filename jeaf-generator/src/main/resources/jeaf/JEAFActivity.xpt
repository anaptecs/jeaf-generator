«IMPORT uml»
«IMPORT JMM»
«EXTENSION java::Naming»
«EXTENSION java::GeneratorCommons»
«EXTENSION java::ActivityHelper»
«EXTENSION org::openarchitectureware::util::stdlib::io»

«DEFINE GenerateActivityInterface FOR JEAFActivity»
	«FILE packagePath()+"/"+name+".java" src_gen»
	«getFileHeader()»
	package «packageName()»;
	
	import com.anaptecs.jeaf.core.api.Activity;
	
	/**
	 * Interface of activity «name».
	 *
	 * «this.getComment()»
	 */
	«EXPAND java::Helper::GenerateAnnotations-»
    public interface «name» extends Activity {
		/**
		 * «this.getComment()»
		 * «FOREACH this.getInputParameters().typeSelect(Parameter) AS param»
		 @param «param.name» «param.getComment()»«ENDFOREACH»
		 «IF hasReturnParameter()»* @return «this.getReturnParameter().getTypeName()» «this.getReturnParameter().getComment()»«ENDIF-»
		 */
	    «IF hasReturnParameter()»«EXPAND java::Helper::GenerateAnnotations FOR this.getReturnParameter()»«ENDIF»
        «IF hasReturnParameter()»«this.getReturnParameter().getTypeName()»«ELSE»void«ENDIF» execute( «FOREACH this.getInputParameters().typeSelect(Parameter) AS param SEPARATOR ', '»«EXPAND java::Helper::GenerateAnnotations FOR param» «param.getTypeName()» «param.name»«ENDFOREACH»);
    }
	«ENDFILE»
«ENDDEFINE»

«DEFINE GenerateActivityImplClass FOR JEAFActivity»
	«FILE packagePath()+"/"+name+"Impl.java" src»
	«getFileHeader()»
	package «packageName()»;
	
	import com.anaptecs.jeaf.core.annotations.JEAFActivityImpl;
	
	/**
	 * Implementation of activity «name».
	 * «this.getComment()»	 
	 */
	@JEAFActivityImpl(activityInterface = «name».class)
	«EXPAND java::Helper::GenerateAnnotations-»
    public class «name»Impl implements  «name» {
		/**
		 * Create new instance of activity. 
		 */
		«name»Impl(  ) {
		}
		
		/**
		 * «this.getComment()» 
		 * «FOREACH this.getInputParameters().typeSelect(Parameter) AS param»
		 @param «param.name» «param.getComment()»«ENDFOREACH»
		 «IF hasReturnParameter()»* @return «this.getReturnParameter().getTypeName()» «this.getReturnParameter().getComment()»«ENDIF-»
		 */
		«IF hasReturnParameter()»«EXPAND java::Helper::GenerateAnnotations FOR this.getReturnParameter()»«ENDIF»
		@Override
		public «IF hasReturnParameter()»«this.getReturnParameter().getTypeName()»«ELSE»void«ENDIF» execute( «FOREACH this.getInputParameters().typeSelect(Parameter) AS param SEPARATOR ', '»«EXPAND java::Helper::GenerateAnnotations FOR param» «param.getTypeName()» «param.name»«ENDFOREACH») {
		  // TODO: Implement business logic for activity.
		  «IF this.getReturnParameter().getTypeName() != "void"»
			  «IF this.getReturnParameter().getTypeName() != "boolean"»
				  «IF this.getReturnParameter().type.isPrimitiveType()»
				  return 0;
				  «ELSE»
				  return null; 
				  «ENDIF»
			  «ELSE»
				  return false;
			«ENDIF»
			«ENDIF»
		  
		}
    }
    «ENDFILE»
«ENDDEFINE»

