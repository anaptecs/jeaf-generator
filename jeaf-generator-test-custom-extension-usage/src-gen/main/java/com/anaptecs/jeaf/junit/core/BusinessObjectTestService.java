/*
 * anaptecs GmbH, Ricarda-Huch-Str. 71, 72760 Reutlingen, Germany
 *
 * Copyright 2004 - 2021. All rights reserved.
 */
package com.anaptecs.jeaf.junit.core;

import java.util.Set;

import com.anaptecs.jeaf.core.api.Service;
import com.anaptecs.jeaf.core.api.ServiceObjectID;
import com.anaptecs.jeaf.junit.extension.JEAFCustomAnnotationTest;

/**
 * The BusinessObjectTest service provides methods that can be used to tests JEAFs implementation of business objects.
 * All the offered method will be used by JEAF JUnit tests.<br/>
 * <br/>
 * This is a multi line comment
 * <p/>
 * This is the second comment of this service. This is just intended to test JEAF Generator.
 * <p/>
 *
 * @author JEAF Generator
 * @version JEAF Release 1.6.x
 */
// @Something
@JEAFCustomAnnotationTest
public interface BusinessObjectTestService extends Service {
  /**
   */
  @JEAFCustomAnnotationTest
  void testAttributeAccess( );

  /**
   */
  @JEAFCustomAnnotationTest
  void testBusinessMethods( );

  /**
   * Method tests the business objects that are generated by the JEAF Generator. This test cases cares about
   * many-to-many associations between service objects.
   */
  @JEAFCustomAnnotationTest
  void testBusinessObjectsWithManyToManyAssociations( );

  /**
   * Method tests the business objects that are generated by the JEAF Generator. This test cases cares about one-to-many
   * associations between service objects.
   */
  @JEAFCustomAnnotationTest
  void testServiceObjectsWithOneToManyAssociations( );

  /**
   * Method tests the business objects that are generated by the JEAF Generator. This test cases cares about one-to-one
   * associations between service objects.
   */
  @JEAFCustomAnnotationTest
  void testServiceObjectsWithOneToOneAssociations( );

  /**
   */
  @JEAFCustomAnnotationTest
  void testCreateSimpleBusinessObject( );

  /**
   */
  @JEAFCustomAnnotationTest
  void testBusinessObjectsWithInheritance( );

  /**
   */
  @JEAFCustomAnnotationTest
  void testMToNReleation( );

  /**
   * Method updates the business object with the passed id.
   *
   * @param pServiceObjectID
   * @return {@link Integer}
   */
  @JEAFCustomAnnotationTest
  Integer updateBusinessObject( @JEAFCustomAnnotationTest ServiceObjectID pServiceObjectID );

  /**
   * @return {@link ServiceObjectID}
   */
  @JEAFCustomAnnotationTest
  ServiceObjectID createBusinessObject( );

  /**
   * @param pServiceObjectID
   */
  @JEAFCustomAnnotationTest
  void deleteBusinessObject( @JEAFCustomAnnotationTest ServiceObjectID pServiceObjectID );

  /**
   */
  @JEAFCustomAnnotationTest
  void testQueryWithJPAQL( );

  /**
   */
  @JEAFCustomAnnotationTest
  void testAOneToBOne( );

  /**
   */
  @JEAFCustomAnnotationTest
  void testBOneToAOne( );

  /**
   */
  @JEAFCustomAnnotationTest
  void createXOne( );

  /**
   * @return {@link ServiceObjectID}
   */
  @JEAFCustomAnnotationTest
  ServiceObjectID createABCObjects( );

  /**
   */
  @JEAFCustomAnnotationTest
  void testNativeQuery( );

  /**
   * @param pBOneID
   * @return {@link Set<ServiceObjectID>}
   */
  @JEAFCustomAnnotationTest
  Set<ServiceObjectID> getCManys( @JEAFCustomAnnotationTest ServiceObjectID pBOneID );

  /**
   * @param pBOneID
   * @return {@link ServiceObjectID}
   */
  @JEAFCustomAnnotationTest
  ServiceObjectID addCMany( @JEAFCustomAnnotationTest ServiceObjectID pBOneID );

  /**
   * @param pBOneID
   */
  @JEAFCustomAnnotationTest
  void clearCMany( @JEAFCustomAnnotationTest ServiceObjectID pBOneID );

  /**
   * @param pBOneID
   * @param pCManyID
   */
  @JEAFCustomAnnotationTest
  void removeCMany( @JEAFCustomAnnotationTest ServiceObjectID pBOneID,
      @JEAFCustomAnnotationTest ServiceObjectID pCManyID );

  /**
   */
  @JEAFCustomAnnotationTest
  void testDynamicPropertyAccess( );

  /**
   */
  @JEAFCustomAnnotationTest
  void testCreateBusinessObjectsWithUserTypeMapping( );

  /**
   */
  @JEAFCustomAnnotationTest
  void testReadBusinessObjectsWithUserTypeMapping( );

  /**
   * @param pClassA
   * @return {@link ClassA}
   */
  @JEAFCustomAnnotationTest
  ClassA createClassA( @JEAFCustomAnnotationTest ClassA pClassA );

  /**
   * @param pClassA
   */
  @JEAFCustomAnnotationTest
  void updateClassA( @JEAFCustomAnnotationTest ClassA pClassA );

  /**
   * @param pServiceObjectID
   * @return {@link ClassA}
   */
  @JEAFCustomAnnotationTest
  ClassA getClassA( @JEAFCustomAnnotationTest ServiceObjectID pServiceObjectID );

  /**
   */
  @JEAFCustomAnnotationTest
  void testInitialObjectCache( );

  /**
   */
  @JEAFCustomAnnotationTest
  void testObjectCacheReloading( );

  /**
   */
  @JEAFCustomAnnotationTest
  void testJDBCWorker( );

  /**
   * @param pFail
   */
  @JEAFCustomAnnotationTest
  void testTransactionListener( @JEAFCustomAnnotationTest boolean pFail );

  /**
   */
  @JEAFCustomAnnotationTest
  void testFlush( );

  /**
   */
  @Deprecated
  @JEAFCustomAnnotationTest
  void deprectedOperation( );
}