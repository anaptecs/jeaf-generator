/*
 * Product Base Definitions
 * This component represents the Open API interface of the accounting service. 
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: jeaf@anaptecs.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package openapitools.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import openapitools.model.BidirectA;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import openapitools.JSON;


/**
 * BidirectB
 */
@JsonPropertyOrder({
  BidirectB.JSON_PROPERTY_A
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class BidirectB {
  public static final String JSON_PROPERTY_A = "a";
  @javax.annotation.Nonnull
  private BidirectA a;

  public BidirectB() { 
  }

  public BidirectB a(@javax.annotation.Nonnull BidirectA a) {
    this.a = a;
    return this;
  }

  /**
   * Get a
   * @return a
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_A)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BidirectA getA() {
    return a;
  }


  @JsonProperty(JSON_PROPERTY_A)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setA(@javax.annotation.Nonnull BidirectA a) {
    this.a = a;
  }


  /**
   * Return true if this BidirectB object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BidirectB bidirectB = (BidirectB) o;
    return Objects.equals(this.a, bidirectB.a);
  }

  @Override
  public int hashCode() {
    return Objects.hash(a);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BidirectB {\n");
    sb.append("    a: ").append(toIndentedString(a)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

