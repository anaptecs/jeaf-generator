/*
 * Product Base Definitions
 * This component represents the Open API interface of the accounting service. 
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: jeaf@anaptecs.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package openapitools.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import openapitools.JSON;


/**
 * OpenAPITestObject
 */
@JsonPropertyOrder({
  OpenAPITestObject.JSON_PROPERTY_READ_ONLY_ATTRIBUTE,
  OpenAPITestObject.JSON_PROPERTY_READ_WRITE_ATTRIBUTE,
  OpenAPITestObject.JSON_PROPERTY_WRITE_ONLY_ATTRIBUTE,
  OpenAPITestObject.JSON_PROPERTY_NULLABLE_ATTRIBUTE,
  OpenAPITestObject.JSON_PROPERTY_NOT_NULLABLE_ATTRIBUTE,
  OpenAPITestObject.JSON_PROPERTY_READ_ONLY_ARRAY,
  OpenAPITestObject.JSON_PROPERTY_READ_WRITE_ARRAY,
  OpenAPITestObject.JSON_PROPERTY_WRITE_ONLY_ARRAY,
  OpenAPITestObject.JSON_PROPERTY_NULLABLE_ARRAY,
  OpenAPITestObject.JSON_PROPERTY_NOT_NULLABLE_ARRAY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class OpenAPITestObject {
  public static final String JSON_PROPERTY_READ_ONLY_ATTRIBUTE = "readOnlyAttribute";
  @javax.annotation.Nullable
  private String readOnlyAttribute;

  public static final String JSON_PROPERTY_READ_WRITE_ATTRIBUTE = "readWriteAttribute";
  @javax.annotation.Nullable
  private String readWriteAttribute;

  public static final String JSON_PROPERTY_WRITE_ONLY_ATTRIBUTE = "writeOnlyAttribute";
  @javax.annotation.Nullable
  private Integer writeOnlyAttribute;

  public static final String JSON_PROPERTY_NULLABLE_ATTRIBUTE = "nullableAttribute";
  @javax.annotation.Nullable
  private Boolean nullableAttribute;

  public static final String JSON_PROPERTY_NOT_NULLABLE_ATTRIBUTE = "notNullableAttribute";
  @javax.annotation.Nonnull
  private Double notNullableAttribute;

  public static final String JSON_PROPERTY_READ_ONLY_ARRAY = "readOnlyArray";
  @javax.annotation.Nullable
  private String readOnlyArray;

  public static final String JSON_PROPERTY_READ_WRITE_ARRAY = "readWriteArray";
  @javax.annotation.Nullable
  private String readWriteArray;

  public static final String JSON_PROPERTY_WRITE_ONLY_ARRAY = "writeOnlyArray";
  @javax.annotation.Nullable
  private Integer writeOnlyArray;

  public static final String JSON_PROPERTY_NULLABLE_ARRAY = "nullableArray";
  @javax.annotation.Nullable
  private Double nullableArray;

  public static final String JSON_PROPERTY_NOT_NULLABLE_ARRAY = "notNullableArray";
  @javax.annotation.Nonnull
  private Double notNullableArray;

  public OpenAPITestObject() { 
  }

  public OpenAPITestObject readOnlyAttribute(@javax.annotation.Nullable String readOnlyAttribute) {
    this.readOnlyAttribute = readOnlyAttribute;
    return this;
  }

  /**
   * Get readOnlyAttribute
   * @return readOnlyAttribute
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_READ_ONLY_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReadOnlyAttribute() {
    return readOnlyAttribute;
  }


  @JsonProperty(JSON_PROPERTY_READ_ONLY_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReadOnlyAttribute(@javax.annotation.Nullable String readOnlyAttribute) {
    this.readOnlyAttribute = readOnlyAttribute;
  }


  public OpenAPITestObject readWriteAttribute(@javax.annotation.Nullable String readWriteAttribute) {
    this.readWriteAttribute = readWriteAttribute;
    return this;
  }

  /**
   * Get readWriteAttribute
   * @return readWriteAttribute
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_READ_WRITE_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReadWriteAttribute() {
    return readWriteAttribute;
  }


  @JsonProperty(JSON_PROPERTY_READ_WRITE_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReadWriteAttribute(@javax.annotation.Nullable String readWriteAttribute) {
    this.readWriteAttribute = readWriteAttribute;
  }


  public OpenAPITestObject writeOnlyAttribute(@javax.annotation.Nullable Integer writeOnlyAttribute) {
    this.writeOnlyAttribute = writeOnlyAttribute;
    return this;
  }

  /**
   * Get writeOnlyAttribute
   * @return writeOnlyAttribute
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WRITE_ONLY_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getWriteOnlyAttribute() {
    return writeOnlyAttribute;
  }


  @JsonProperty(JSON_PROPERTY_WRITE_ONLY_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWriteOnlyAttribute(@javax.annotation.Nullable Integer writeOnlyAttribute) {
    this.writeOnlyAttribute = writeOnlyAttribute;
  }


  public OpenAPITestObject nullableAttribute(@javax.annotation.Nullable Boolean nullableAttribute) {
    this.nullableAttribute = nullableAttribute;
    return this;
  }

  /**
   * Get nullableAttribute
   * @return nullableAttribute
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NULLABLE_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getNullableAttribute() {
    return nullableAttribute;
  }


  @JsonProperty(JSON_PROPERTY_NULLABLE_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNullableAttribute(@javax.annotation.Nullable Boolean nullableAttribute) {
    this.nullableAttribute = nullableAttribute;
  }


  public OpenAPITestObject notNullableAttribute(@javax.annotation.Nonnull Double notNullableAttribute) {
    this.notNullableAttribute = notNullableAttribute;
    return this;
  }

  /**
   * Get notNullableAttribute
   * @return notNullableAttribute
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NOT_NULLABLE_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getNotNullableAttribute() {
    return notNullableAttribute;
  }


  @JsonProperty(JSON_PROPERTY_NOT_NULLABLE_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNotNullableAttribute(@javax.annotation.Nonnull Double notNullableAttribute) {
    this.notNullableAttribute = notNullableAttribute;
  }


  public OpenAPITestObject readOnlyArray(@javax.annotation.Nullable String readOnlyArray) {
    this.readOnlyArray = readOnlyArray;
    return this;
  }

  /**
   * Get readOnlyArray
   * @return readOnlyArray
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_READ_ONLY_ARRAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReadOnlyArray() {
    return readOnlyArray;
  }


  @JsonProperty(JSON_PROPERTY_READ_ONLY_ARRAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReadOnlyArray(@javax.annotation.Nullable String readOnlyArray) {
    this.readOnlyArray = readOnlyArray;
  }


  public OpenAPITestObject readWriteArray(@javax.annotation.Nullable String readWriteArray) {
    this.readWriteArray = readWriteArray;
    return this;
  }

  /**
   * Get readWriteArray
   * @return readWriteArray
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_READ_WRITE_ARRAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReadWriteArray() {
    return readWriteArray;
  }


  @JsonProperty(JSON_PROPERTY_READ_WRITE_ARRAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReadWriteArray(@javax.annotation.Nullable String readWriteArray) {
    this.readWriteArray = readWriteArray;
  }


  public OpenAPITestObject writeOnlyArray(@javax.annotation.Nullable Integer writeOnlyArray) {
    this.writeOnlyArray = writeOnlyArray;
    return this;
  }

  /**
   * Get writeOnlyArray
   * @return writeOnlyArray
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WRITE_ONLY_ARRAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getWriteOnlyArray() {
    return writeOnlyArray;
  }


  @JsonProperty(JSON_PROPERTY_WRITE_ONLY_ARRAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWriteOnlyArray(@javax.annotation.Nullable Integer writeOnlyArray) {
    this.writeOnlyArray = writeOnlyArray;
  }


  public OpenAPITestObject nullableArray(@javax.annotation.Nullable Double nullableArray) {
    this.nullableArray = nullableArray;
    return this;
  }

  /**
   * Get nullableArray
   * @return nullableArray
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NULLABLE_ARRAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getNullableArray() {
    return nullableArray;
  }


  @JsonProperty(JSON_PROPERTY_NULLABLE_ARRAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNullableArray(@javax.annotation.Nullable Double nullableArray) {
    this.nullableArray = nullableArray;
  }


  public OpenAPITestObject notNullableArray(@javax.annotation.Nonnull Double notNullableArray) {
    this.notNullableArray = notNullableArray;
    return this;
  }

  /**
   * Get notNullableArray
   * @return notNullableArray
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NOT_NULLABLE_ARRAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getNotNullableArray() {
    return notNullableArray;
  }


  @JsonProperty(JSON_PROPERTY_NOT_NULLABLE_ARRAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNotNullableArray(@javax.annotation.Nonnull Double notNullableArray) {
    this.notNullableArray = notNullableArray;
  }


  /**
   * Return true if this OpenAPITestObject object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OpenAPITestObject openAPITestObject = (OpenAPITestObject) o;
    return Objects.equals(this.readOnlyAttribute, openAPITestObject.readOnlyAttribute) &&
        Objects.equals(this.readWriteAttribute, openAPITestObject.readWriteAttribute) &&
        Objects.equals(this.writeOnlyAttribute, openAPITestObject.writeOnlyAttribute) &&
        Objects.equals(this.nullableAttribute, openAPITestObject.nullableAttribute) &&
        Objects.equals(this.notNullableAttribute, openAPITestObject.notNullableAttribute) &&
        Objects.equals(this.readOnlyArray, openAPITestObject.readOnlyArray) &&
        Objects.equals(this.readWriteArray, openAPITestObject.readWriteArray) &&
        Objects.equals(this.writeOnlyArray, openAPITestObject.writeOnlyArray) &&
        Objects.equals(this.nullableArray, openAPITestObject.nullableArray) &&
        Objects.equals(this.notNullableArray, openAPITestObject.notNullableArray);
  }

  @Override
  public int hashCode() {
    return Objects.hash(readOnlyAttribute, readWriteAttribute, writeOnlyAttribute, nullableAttribute, notNullableAttribute, readOnlyArray, readWriteArray, writeOnlyArray, nullableArray, notNullableArray);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OpenAPITestObject {\n");
    sb.append("    readOnlyAttribute: ").append(toIndentedString(readOnlyAttribute)).append("\n");
    sb.append("    readWriteAttribute: ").append(toIndentedString(readWriteAttribute)).append("\n");
    sb.append("    writeOnlyAttribute: ").append(toIndentedString(writeOnlyAttribute)).append("\n");
    sb.append("    nullableAttribute: ").append(toIndentedString(nullableAttribute)).append("\n");
    sb.append("    notNullableAttribute: ").append(toIndentedString(notNullableAttribute)).append("\n");
    sb.append("    readOnlyArray: ").append(toIndentedString(readOnlyArray)).append("\n");
    sb.append("    readWriteArray: ").append(toIndentedString(readWriteArray)).append("\n");
    sb.append("    writeOnlyArray: ").append(toIndentedString(writeOnlyArray)).append("\n");
    sb.append("    nullableArray: ").append(toIndentedString(nullableArray)).append("\n");
    sb.append("    notNullableArray: ").append(toIndentedString(notNullableArray)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

