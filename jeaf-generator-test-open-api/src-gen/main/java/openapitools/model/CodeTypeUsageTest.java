/*
 * Product Base Definitions
 * This component represents the Open API interface of the accounting service. 
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: jeaf@anaptecs.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package openapitools.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import openapitools.JSON;


/**
 * CodeTypeUsageTest
 */
@JsonPropertyOrder({
  CodeTypeUsageTest.JSON_PROPERTY_BOOLEAN_CODE,
  CodeTypeUsageTest.JSON_PROPERTY_BOOLEAN_CODE_ASSOCIATION,
  CodeTypeUsageTest.JSON_PROPERTY_SHORT_CODE_TYPE_ASSOCIATION,
  CodeTypeUsageTest.JSON_PROPERTY_STRING_CODE,
  CodeTypeUsageTest.JSON_PROPERTY_SHORT_CODE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class CodeTypeUsageTest {
  public static final String JSON_PROPERTY_BOOLEAN_CODE = "booleanCode";
  @javax.annotation.Nonnull
  private Boolean booleanCode;

  public static final String JSON_PROPERTY_BOOLEAN_CODE_ASSOCIATION = "booleanCodeAssociation";
  @javax.annotation.Nullable
  private List<Boolean> booleanCodeAssociation = new ArrayList<>();

  public static final String JSON_PROPERTY_SHORT_CODE_TYPE_ASSOCIATION = "shortCodeTypeAssociation";
  @javax.annotation.Nonnull
  private List<Integer> shortCodeTypeAssociation = new ArrayList<>();

  public static final String JSON_PROPERTY_STRING_CODE = "stringCode";
  @javax.annotation.Nonnull
  private String stringCode;

  public static final String JSON_PROPERTY_SHORT_CODE = "shortCode";
  @javax.annotation.Nonnull
  private Integer shortCode;

  public CodeTypeUsageTest() { 
  }

  public CodeTypeUsageTest booleanCode(@javax.annotation.Nonnull Boolean booleanCode) {
    this.booleanCode = booleanCode;
    return this;
  }

  /**
   * Get booleanCode
   * @return booleanCode
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BOOLEAN_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getBooleanCode() {
    return booleanCode;
  }


  @JsonProperty(JSON_PROPERTY_BOOLEAN_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBooleanCode(@javax.annotation.Nonnull Boolean booleanCode) {
    this.booleanCode = booleanCode;
  }


  public CodeTypeUsageTest booleanCodeAssociation(@javax.annotation.Nullable List<Boolean> booleanCodeAssociation) {
    this.booleanCodeAssociation = booleanCodeAssociation;
    return this;
  }

  public CodeTypeUsageTest addBooleanCodeAssociationItem(Boolean booleanCodeAssociationItem) {
    if (this.booleanCodeAssociation == null) {
      this.booleanCodeAssociation = new ArrayList<>();
    }
    this.booleanCodeAssociation.add(booleanCodeAssociationItem);
    return this;
  }

  /**
   * Get booleanCodeAssociation
   * @return booleanCodeAssociation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BOOLEAN_CODE_ASSOCIATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Boolean> getBooleanCodeAssociation() {
    return booleanCodeAssociation;
  }


  @JsonProperty(JSON_PROPERTY_BOOLEAN_CODE_ASSOCIATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBooleanCodeAssociation(@javax.annotation.Nullable List<Boolean> booleanCodeAssociation) {
    this.booleanCodeAssociation = booleanCodeAssociation;
  }


  public CodeTypeUsageTest shortCodeTypeAssociation(@javax.annotation.Nonnull List<Integer> shortCodeTypeAssociation) {
    this.shortCodeTypeAssociation = shortCodeTypeAssociation;
    return this;
  }

  public CodeTypeUsageTest addShortCodeTypeAssociationItem(Integer shortCodeTypeAssociationItem) {
    if (this.shortCodeTypeAssociation == null) {
      this.shortCodeTypeAssociation = new ArrayList<>();
    }
    this.shortCodeTypeAssociation.add(shortCodeTypeAssociationItem);
    return this;
  }

  /**
   * Get shortCodeTypeAssociation
   * @return shortCodeTypeAssociation
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SHORT_CODE_TYPE_ASSOCIATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Integer> getShortCodeTypeAssociation() {
    return shortCodeTypeAssociation;
  }


  @JsonProperty(JSON_PROPERTY_SHORT_CODE_TYPE_ASSOCIATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShortCodeTypeAssociation(@javax.annotation.Nonnull List<Integer> shortCodeTypeAssociation) {
    this.shortCodeTypeAssociation = shortCodeTypeAssociation;
  }


  public CodeTypeUsageTest stringCode(@javax.annotation.Nonnull String stringCode) {
    this.stringCode = stringCode;
    return this;
  }

  /**
   * Get stringCode
   * @return stringCode
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STRING_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStringCode() {
    return stringCode;
  }


  @JsonProperty(JSON_PROPERTY_STRING_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStringCode(@javax.annotation.Nonnull String stringCode) {
    this.stringCode = stringCode;
  }


  public CodeTypeUsageTest shortCode(@javax.annotation.Nonnull Integer shortCode) {
    this.shortCode = shortCode;
    return this;
  }

  /**
   * Get shortCode
   * maximum: 4711
   * @return shortCode
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SHORT_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getShortCode() {
    return shortCode;
  }


  @JsonProperty(JSON_PROPERTY_SHORT_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShortCode(@javax.annotation.Nonnull Integer shortCode) {
    this.shortCode = shortCode;
  }


  /**
   * Return true if this CodeTypeUsageTest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CodeTypeUsageTest codeTypeUsageTest = (CodeTypeUsageTest) o;
    return Objects.equals(this.booleanCode, codeTypeUsageTest.booleanCode) &&
        Objects.equals(this.booleanCodeAssociation, codeTypeUsageTest.booleanCodeAssociation) &&
        Objects.equals(this.shortCodeTypeAssociation, codeTypeUsageTest.shortCodeTypeAssociation) &&
        Objects.equals(this.stringCode, codeTypeUsageTest.stringCode) &&
        Objects.equals(this.shortCode, codeTypeUsageTest.shortCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(booleanCode, booleanCodeAssociation, shortCodeTypeAssociation, stringCode, shortCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CodeTypeUsageTest {\n");
    sb.append("    booleanCode: ").append(toIndentedString(booleanCode)).append("\n");
    sb.append("    booleanCodeAssociation: ").append(toIndentedString(booleanCodeAssociation)).append("\n");
    sb.append("    shortCodeTypeAssociation: ").append(toIndentedString(shortCodeTypeAssociation)).append("\n");
    sb.append("    stringCode: ").append(toIndentedString(stringCode)).append("\n");
    sb.append("    shortCode: ").append(toIndentedString(shortCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

