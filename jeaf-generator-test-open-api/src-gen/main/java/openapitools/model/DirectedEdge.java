/*
 * Product Base Definitions
 * This component represents the Open API interface of the accounting service. 
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: jeaf@anaptecs.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package openapitools.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import openapitools.model.Stop;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import openapitools.JSON;


/**
 * Just a simple comment. 
 */
@JsonPropertyOrder({
  DirectedEdge.JSON_PROPERTY_START,
  DirectedEdge.JSON_PROPERTY_END,
  DirectedEdge.JSON_PROPERTY_PREVIOUS_NAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class DirectedEdge {
  public static final String JSON_PROPERTY_START = "start";
  private Stop start;

  public static final String JSON_PROPERTY_END = "end";
  private Stop end;

  public static final String JSON_PROPERTY_PREVIOUS_NAME = "previousName";
  private String previousName;

  public DirectedEdge() { 
  }

  public DirectedEdge start(Stop start) {
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Stop getStart() {
    return start;
  }


  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStart(Stop start) {
    this.start = start;
  }


  public DirectedEdge end(Stop end) {
    this.end = end;
    return this;
  }

   /**
   * Get end
   * @return end
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_END)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Stop getEnd() {
    return end;
  }


  @JsonProperty(JSON_PROPERTY_END)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnd(Stop end) {
    this.end = end;
  }


  public DirectedEdge previousName(String previousName) {
    this.previousName = previousName;
    return this;
  }

   /**
   * Another simple comment. &lt;br&gt; Java Property Name: &#39;link&#39;  
   * @return previousName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PREVIOUS_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPreviousName() {
    return previousName;
  }


  @JsonProperty(JSON_PROPERTY_PREVIOUS_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPreviousName(String previousName) {
    this.previousName = previousName;
  }


  /**
   * Return true if this DirectedEdge object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DirectedEdge directedEdge = (DirectedEdge) o;
    return Objects.equals(this.start, directedEdge.start) &&
        Objects.equals(this.end, directedEdge.end) &&
        Objects.equals(this.previousName, directedEdge.previousName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(start, end, previousName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DirectedEdge {\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    previousName: ").append(toIndentedString(previousName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

