/*
 * Product Base Definitions
 * This component represents the Open API interface of the accounting service. 
 *
 * OpenAPI spec version: 0.0.1
 * Contact: jeaf@anaptecs.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.anaptecs.jeaf.openapi;

import java.util.Objects;
import java.util.Arrays;
import com.anaptecs.jeaf.openapi.ChildB;
import com.anaptecs.jeaf.openapi.ParentClass;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * ChildBB
 */


public class ChildBB extends ChildB {
  @JsonProperty("childBBAttribute")
  private Long childBBAttribute = null;

  @JsonProperty("deprecatedAttribute")
  private Integer deprecatedAttribute = null;

  @JsonProperty("deprecatedBs")
  private List<ChildB> deprecatedBs = null;

  @JsonProperty("deprecatedParent")
  private ParentClass deprecatedParent = null;

  @JsonProperty("deprecatedArray")
  private byte[] deprecatedArray = null;

  public ChildBB childBBAttribute(Long childBBAttribute) {
    this.childBBAttribute = childBBAttribute;
    return this;
  }

   /**
   * Get childBBAttribute
   * @return childBBAttribute
  **/
  @Schema(required = true, description = "")
  public Long getChildBBAttribute() {
    return childBBAttribute;
  }

  public void setChildBBAttribute(Long childBBAttribute) {
    this.childBBAttribute = childBBAttribute;
  }

  public ChildBB deprecatedAttribute(Integer deprecatedAttribute) {
    this.deprecatedAttribute = deprecatedAttribute;
    return this;
  }

   /**
   *  &lt;br&gt;&lt;br&gt; Deprecated: Please  keep &#x60;hands off&#x60;. (since: , removed with: ) 
   * @return deprecatedAttribute
  **/
  @Schema(required = true, description = " <br><br> Deprecated: Please  keep `hands off`. (since: , removed with: ) ")
  public Integer getDeprecatedAttribute() {
    return deprecatedAttribute;
  }

  public void setDeprecatedAttribute(Integer deprecatedAttribute) {
    this.deprecatedAttribute = deprecatedAttribute;
  }

  public ChildBB deprecatedBs(List<ChildB> deprecatedBs) {
    this.deprecatedBs = deprecatedBs;
    return this;
  }

  public ChildBB addDeprecatedBsItem(ChildB deprecatedBsItem) {
    if (this.deprecatedBs == null) {
      this.deprecatedBs = new ArrayList<>();
    }
    this.deprecatedBs.add(deprecatedBsItem);
    return this;
  }

   /**
   * Get deprecatedBs
   * @return deprecatedBs
  **/
  @Schema(description = "")
  public List<ChildB> getDeprecatedBs() {
    return deprecatedBs;
  }

  public void setDeprecatedBs(List<ChildB> deprecatedBs) {
    this.deprecatedBs = deprecatedBs;
  }

  public ChildBB deprecatedParent(ParentClass deprecatedParent) {
    this.deprecatedParent = deprecatedParent;
    return this;
  }

   /**
   * Get deprecatedParent
   * @return deprecatedParent
  **/
  @Schema(description = "")
  public ParentClass getDeprecatedParent() {
    return deprecatedParent;
  }

  public void setDeprecatedParent(ParentClass deprecatedParent) {
    this.deprecatedParent = deprecatedParent;
  }

  public ChildBB deprecatedArray(byte[] deprecatedArray) {
    this.deprecatedArray = deprecatedArray;
    return this;
  }

   /**
   * Get deprecatedArray
   * @return deprecatedArray
  **/
  @Schema(description = "")
  public byte[] getDeprecatedArray() {
    return deprecatedArray;
  }

  public void setDeprecatedArray(byte[] deprecatedArray) {
    this.deprecatedArray = deprecatedArray;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChildBB childBB = (ChildBB) o;
    return Objects.equals(this.childBBAttribute, childBB.childBBAttribute) &&
        Objects.equals(this.deprecatedAttribute, childBB.deprecatedAttribute) &&
        Objects.equals(this.deprecatedBs, childBB.deprecatedBs) &&
        Objects.equals(this.deprecatedParent, childBB.deprecatedParent) &&
        Arrays.equals(this.deprecatedArray, childBB.deprecatedArray) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(childBBAttribute, deprecatedAttribute, deprecatedBs, deprecatedParent, Arrays.hashCode(deprecatedArray), super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChildBB {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    childBBAttribute: ").append(toIndentedString(childBBAttribute)).append("\n");
    sb.append("    deprecatedAttribute: ").append(toIndentedString(deprecatedAttribute)).append("\n");
    sb.append("    deprecatedBs: ").append(toIndentedString(deprecatedBs)).append("\n");
    sb.append("    deprecatedParent: ").append(toIndentedString(deprecatedParent)).append("\n");
    sb.append("    deprecatedArray: ").append(toIndentedString(deprecatedArray)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
