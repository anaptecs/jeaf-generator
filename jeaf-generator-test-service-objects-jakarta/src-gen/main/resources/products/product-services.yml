openapi: 3.0.3

info:
  title: Product Services
  version: 1.16.3-SNAPSHOT
  description: |
    This component represents the OpenAPI interface of the accounting service.
    
    Dear Developers, please be aware that multi line comments can also be used.
  termsOfService: https://www.anaptecs.de/jeaf/TermsOfUse
  contact:
    name: JEAF Development Team
    url: 'https://www.anaptecs.de/jeaf'
    email: jeaf@anaptecs.de
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'

servers:
  - url: https://accounting.jeaf.de
  - url: http://localhost:8080/test
  - url: https://demo-jeaf.anaptecs.de
  - url: https://test-jeaf.anaptecs.de
  - url: https://jeaf.anaptecs.de
    description: |
      This is our lovely production environment
      
      It can stand any load, until it crashes ;-)

tags:
  - name: Products
    description: |
      Tag groups all product related operations together.
      url: https//jeaf.anaptecs.de/link1
  - name: MasterData
    description: |
      Tag marks all operations that are connected with Master Data.
  - name: A Tag
  - name: Another Tag
  - name: B Tag

paths:
  # ProductService
  /products:
    get:
      tags:
        - MasterData
        - Products
      description: |
        Operation returns all available product.
      operationId: getProducts
      externalDocs:
        url: https://jeaf.anaptecs.de/link2
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../base/product-base.yml#/components/schemas/Product'
                minItems: 0
          headers:
            Cache-Control:
              schema:
                type: string
                default: 'public, max-age=10000'
                description: |
                  Results for this call are cacheable for the duration as it is defined in this header field
            Max-TTL:
              schema:
                type: integer
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
            Yet-Another-Header:
              schema:
                type: boolean
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
    post:
      tags:
        - Products
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../base/product-base.yml#/components/schemas/Product'
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: boolean
                example: true
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
    head:
      operationId: ping
      responses:
        '202':
          description: |
            In case that a request was successful only status code 202 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).
        '204':
          $ref: '#/components/responses/NoContentResponse'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/{id}:
    get:
      tags:
        - MasterData
        - Products
      operationId: getProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            default: 4711
            example: 1234-345
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                $ref: '../base/product-base.yml#/components/schemas/Product'
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/sortiment/{id}:
    get:
      tags:
        - MasterData
        - Products
      operationId: getSortiment
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
            minLength: 1
        - name: lang
          in: header
          required: true
          schema:
            type: string
            example: en
        - name: reseller
          in: cookie
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: q1
          in: query
          required: true
          schema:
            type: string
        - name: intCode
          in: header
          schema:
            $ref: '../base/product-base.yml#/components/schemas/IntegerCodeType' 
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                $ref: '../base/product-base.yml#/components/schemas/Sortiment'
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/ChannelCode:
    post:
      operationId: createChannelCode
      requestBody:
        description: |
          
          Breaking Change with 2.0: Parameter will be mandatory
        required: true
        content:
          application/json:
            schema:
              type: string
              example: MOBILE_APP
          application/xml:
            schema:
              type: string
              example: MOBILE_APP
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
                default: 'WEBSHOP'
                example: MOBILE_APP
                nullable: false
            application/xml:
              schema:
                type: string
                default: 'WEBSHOP'
                example: MOBILE_APP
                nullable: false
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/deprecated/operation:
    get:
      description: |
        
        Deprecated: This request is no longer supported. (since: 1.1.1, removed with: 2.3)
      operationId: deprecatedOperation
      deprecated: true
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/deprecated/context:
    post:
      operationId: deprecatedContext
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
            minLength: 1
        - name: lang
          in: header
          required: true
          schema:
            type: string
            example: en
        - name: reseller
          in: cookie
          required: true
          schema:
            type: integer
            format: int64
        - name: q1
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/deprecated/beanParams:
    post:
      operationId: deprecatedBeanParam
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: lang
          in: header
          required: true
          schema:
            type: string
        - name: q2
          in: query
          required: true
          deprecated: true
          schema:
            type: string
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/deprecated/params:
    post:
      operationId: deprecatedParams
      parameters:
        - name: param1
          in: header
          required: true
          deprecated: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
                deprecated: true
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/deprecated/body:
    post:
      operationId: deprecatedBody
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              deprecated: true
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/deprecated/complexBody:
    post:
      description: |
        Please be aware that deprecations on complex bodies are not supported. Instead the whole operation needs to be set to deprecated.
      operationId: deprectedComplexRequestBody
      requestBody:
        description: |
          
          Operation has deprected body parameter. Please be aware that deprecations on complex bodies are not supported. Instead the whole operation needs to be set to deprecated.
        required: true
        content:
          application/json:
            schema:
              $ref: '../base/product-base.yml#/components/schemas/Product'
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/deprecated/complexReturn:
    get:
      operationId: deprecatedComplexReturn
      responses:
        '200':
          description: |
            TODO: Please add comment for response
            Operation has deprected return type. Please be aware that deprecations on complex return types are not supported. Instead the whole operation needs to be set to deprecated.
          content:
            application/json:
              schema:
                $ref: '../base/product-base.yml#/components/schemas/Product'
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/specific/{id}:
    patch:
      operationId: loadSpecificThings
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
            minLength: 1
        - name: lang
          in: header
          required: true
          schema:
            type: string
            example: en
        - name: reseller
          in: cookie
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: q1
          in: query
          required: true
          schema:
            type: string
        - name: intCode
          in: header
          schema:
            $ref: '../base/product-base.yml#/components/schemas/IntegerCodeType' 
        - name: specificHeader
          in: header
          required: true
          schema:
            type: string
        - name: deprecatedHeader
          in: header
          required: true
          deprecated: true
          schema:
            type: integer
            format: int32
            minimum: 1234
            nullable: false
        - name: deprecatedType
          in: header
          required: true
          schema:
            type: integer
            format: int32
            deprecated: true
            nullable: false
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
    
  /products/ChannelCodeObject:
    post:
      operationId: createChannelCodeFromObject
      requestBody:
        description: |
          Channel Code that should be created.
        required: true
        content:
          application/json:
            schema:
                type: string
                default: 'WEBSHOP'
                example: MOBILE_APP
                nullable: false
      responses:
        '200':
          description: |
            Created channel code
          content:
            application/json:
              schema:
                type: string
                default: 'WEBSHOP'
                example: MOBILE_APP
                nullable: false
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/currencies:
    post:
      tags:
        - B Tag
      operationId: addCurrencies
      requestBody:
        required: true
        content:
          application/json:
            schema:
                description: |
                  ISO 4217 currency code.
                type: array
                items:
                  type: string
                  minLength: 3
                  maxLength: 3
                  example: CHF
                minItems: 1
                nullable: false
                example: ["CHF", "EUR", "USD"]
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                description: |
                  ISO 4217 currency code.
                type: array
                items:
                  type: string
                  minLength: 3
                  maxLength: 3
                  example: CHF
                minItems: 1
                nullable: false
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/currencies/valid:
    post:
      tags:
        - Another Tag
      operationId: isCurrencySupported
      requestBody:
        required: true
        content:
          application/json:
            schema:
                description: |
                  ISO 4217 currency code.
                type: string
                default: 'CHF'
                minLength: 3
                maxLength: 3
                example: CHF
                nullable: false
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                description: |
                  ISO 4217 currency code.
                type: string
                default: 'CHF'
                minLength: 3
                maxLength: 3
                example: CHF
                nullable: false
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/codeTypeUsages:
    post:
      operationId: testCodeTypeUsage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../base/product-base.yml#/components/schemas/StringCodeType'
      responses:
        '202':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                $ref: '../base/product-base.yml#/components/schemas/IntegerCodeType'
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/LocalBeanParam:
    get:
      operationId: testLocalBeanParamType
      parameters:
        - $ref: '#/components/parameters/localKey'
        - $ref: '#/components/parameters/localID'
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/ExternalBeanParam:
    get:
      operationId: testExternalBeanParameterType
      parameters:
        - $ref: '../base/product-base.yml#/components/parameters/novaKey'
        - $ref: '../base/product-base.yml#/components/parameters/tkID'
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/ChildBeanParam:
    get:
      operationId: testChildBeanParameter
      parameters:
        - $ref: '../base/product-base.yml#/components/parameters/novaKey'
        - $ref: '../base/product-base.yml#/components/parameters/tkID'
        - $ref: '#/components/parameters/childProperty'
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/IBAN:
    post:
      operationId: checkIBAN
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              pattern: '^DE\d{2}\s?([0-9a-zA-Z]{4}\s?){4}[0-9a-zA-Z]{2}$'
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: boolean
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/channels:
    get:
      tags:
        - A Tag
      operationId: getChannels
      parameters:
        - name: channelTypes
          in: query
          description: |
            Default value: MOBILE
          schema:
            type: array
            items:
              $ref: '../base/product-base.yml#/components/schemas/ChannelType'
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../base/product-base.yml#/components/schemas/Channel'
                minItems: 0
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/DefaultChannel:
    get:
      operationId: getDefaultChannel
      parameters:
        - name: channelType
          in: query
          description: |
            Default value: COUNTER
          required: true
          schema:
            $ref: '../base/product-base.yml#/components/schemas/ChannelType' 
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                $ref: '../base/product-base.yml#/components/schemas/Channel'
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/currencies/{channelCode}:
    get:
      operationId: getSupportedCurrencies
      parameters:
        - name: channelCode
          in: path
          required: true
          schema:
            type: string
            default: 'WEBSHOP'
            example: MOBILE_APP
            nullable: false
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                description: |
                  ISO 4217 currency code.
                type: array
                items:
                  type: string
                  minLength: 3
                  maxLength: 3
                  example: CHF
                nullable: true
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/async-currencies/{channelCode}:
    get:
      operationId: getSupportedCurrenciesAsync
      parameters:
        - name: channelCode
          in: path
          required: true
          schema:
            type: string
            default: 'WEBSHOP'
            example: MOBILE_APP
            nullable: false
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                description: |
                  ISO 4217 currency code.
                type: array
                items:
                  type: string
                  minLength: 3
                  maxLength: 3
                  example: CHF
                nullable: true
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/test-date-query-params/{path}:
    get:
      operationId: testDateQueryParams
      parameters:
        - name: path
          in: path
          required: true
          schema:
            type: string
        - name: startTimestamp
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: startTime
          in: query
          required: true
          schema:
            type: string
            format: time
        - name: localStartTimestamp
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: localStartTime
          in: query
          required: true
          schema:
            type: string
            format: time
        - name: localStartDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: calendar
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: utilDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: sqlTimestamp
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: sqlTime
          in: query
          required: true
          schema:
            type: string
            format: time
        - name: sqlDate
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/test-date-query-params-beans/{path}:
    get:
      operationId: testDateQueryParamsBean
      parameters:
        - name: offsetDateTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: offsetTime
          in: query
          required: true
          schema:
            type: string
            format: time
        - name: localDateTime
          in: query
          description: |
            
            Breaking Change with 2.0: Has to be in the past
          required: true
          schema:
            type: string
            format: date-time
        - name: localTime
          in: query
          required: true
          schema:
            type: string
            format: time
        - name: localDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: utilDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: calendar
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: sqlTimestamp
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: sqlTime
          in: query
          required: true
          schema:
            type: string
            format: time
        - name: sqlDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: path
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/test-optional-query-params:
    get:
      operationId: testOptionalQueryParams
      parameters:
        - name: query1
          in: query
          schema:
            type: string
            default: Just a default value
        - name: query2
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/special-header-params:
    get:
      operationId: testSpecialHeaderParams
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/technicalHeaderBeanParam:
    get:
      operationId: testTechnicalHeaderBean
      parameters:
        - name: Reseller
          in: header
          required: true
          schema:
            type: string
        - name: Authentication
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/technicalHeaderParam:
    get:
      operationId: testTechnicalHeaderParam
      parameters:
        - name: Reseller
          in: header
          required: true
          schema:
            type: string
        - name: Authentication
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/testNotInlinedBeanParam:
    post:
      operationId: testNotInlinedBeanParam
      parameters:
        - $ref: '../base/product-base.yml#/components/parameters/header'
        - $ref: '../base/product-base.yml#/components/parameters/doubleCode'
        - $ref: '../base/product-base.yml#/components/parameters/extensibleEnum'
        - $ref: '../base/product-base.yml#/components/parameters/bookingID'
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/testStringArray:
    post:
      operationId: testPrimitiveArray
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/testPrimitiveArrayAsQueryParam:
    get:
      operationId: testPrimitiveArrayAsQueryParam
      parameters:
        - name: intValues
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/big-decimal-codes-header:
    get:
      operationId: testMultivaluedHeader
      parameters:
        - name: pCodes
          in: header
          schema:
            type: array
            items:
              type: number
              format: double
            nullable: true
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/big-decimal-codes-query:
    get:
      operationId: testMultivaluedQueryParams
      parameters:
        - name: pCodes
          in: query
          schema:
            type: array
            items:
              type: number
              format: double
            nullable: true
        - name: pEnums
          in: query
          schema:
            type: array
            items:
              $ref: '../base/product-base.yml#/components/schemas/BooleanLiteralsEnum'
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/testMulitValuedBeanParams:
    get:
      operationId: testMulitValuedBeanParams
      parameters:
        - name: stringCodeHeader
          in: header
          description: |
            This is my multivalued test header
          schema:
            type: array
            items:
              type: string
              minLength: 32
              maxLength: 128
            nullable: true
        - name: longCodeQueryParam
          in: query
          description: |
            Multivalued query param
          schema:
            type: array
            items:
              type: integer
              format: int64
            nullable: true
        - name: literals
          in: query
          description: |
            so many literals are possible
          required: true
          schema:
            type: array
            minItems: 1
            items:
              $ref: '../base/product-base.yml#/components/schemas/BooleanLiteralsEnum'
        - name: stringProperty
          in: query
          required: true
          schema:
            type: string
            minLength: 32
            maxLength: 64
        - name: longValues
          in: header
          description: |
            long values as multivalued  header
          schema:
            type: array
            minimum: 3270
            maximum: 4711
            items:
              type: integer
              format: int64
        - name: pTheEnum
          in: query
          required: true
          schema:
            $ref: '../base/product-base.yml#/components/schemas/BooleanLiteralsEnum' 
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/no-return-type:
    post:
      operationId: noReturnType
      parameters:
        - name: stringCodeHeader
          in: header
          description: |
            This is my multivalued test header
          schema:
            type: array
            items:
              type: string
              minLength: 32
              maxLength: 128
            nullable: true
        - name: longCodeQueryParam
          in: query
          description: |
            Multivalued query param
          schema:
            type: array
            items:
              type: integer
              format: int64
            nullable: true
        - name: literals
          in: query
          description: |
            so many literals are possible
          required: true
          schema:
            type: array
            minItems: 1
            items:
              $ref: '../base/product-base.yml#/components/schemas/BooleanLiteralsEnum'
        - name: stringProperty
          in: query
          required: true
          schema:
            type: string
            minLength: 32
            maxLength: 64
        - name: longValues
          in: header
          description: |
            long values as multivalued  header
          schema:
            type: array
            minimum: 3270
            maximum: 4711
            items:
              type: integer
              format: int64
        - name: The-Header
          in: header
          required: true
          schema:
            type: string
      responses:
        '204':
          description: |
            This method does not need to return anything
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/delete-something/{id}:
    delete:
      operationId: deleteSomething
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
    
  /products/generic-single-value:
    get:
      operationId: genericSingleValueResponse
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyGenericRESTResponse'
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/generic-multi-value:
    get:
      operationId: genericMultiValueResponse
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyGenericListResponse'
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/test-string-code-with-restriction/{string-code}:
    post:
      operationId: testDataTypeWithRestrition
      parameters:
        - name: string-code
          in: path
          required: true
          schema:
            type: string
            minLength: 32
            maxLength: 128
            nullable: false
        - name: short-codes
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
              maximum: 4711
            nullable: true
        - name: byte-code
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 32
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/testContext:
    get:
      operationId: testContext
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
            minLength: 1
        - name: lang
          in: header
          required: true
          schema:
            type: string
            example: en
        - name: reseller
          in: cookie
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: q1
          in: query
          required: true
          schema:
            type: string
        - name: intCode
          in: header
          schema:
            $ref: '../base/product-base.yml#/components/schemas/IntegerCodeType' 
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/nested-generics:
    get:
      operationId: testNestedGenericsResponse
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedBusinessObjectsResponse'
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/multivalued-generics:
    get:
      operationId: testNestedMultivaluedResponse
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OffersResponse'
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/testDuplicateGenerics1:
    get:
      operationId: testDuplicateGenerics1
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                $ref: '../base/product-base.yml#/components/schemas/MyFirstResponse'
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    
  /products/testDuplicateGenerics2:
    get:
      operationId: testDuplicateGenerics2
      responses:
        '200':
          description: |
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MySecondResponse'
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
    
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'
    

security:
  - {}
  - MyOAuthSecuritySchema: [read:pets,write:pets]

components:
  securitySchemes:
    MyOAuthSecuritySchema:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://example.com/api/oauth/dialog'
          tokenUrl: 'https://example.com/api/oauth/dialog'
          refreshUrl: 'https://example.com/api/oauth/dialog'
          scopes: 
            read:pets: Read pets data
            write:pets: Modify pets

        implicit:
          authorizationUrl: 'https://example.com/api/oauth/dialog'
          tokenUrl: 'TODO Please add required token URL'
          refreshUrl: 'https://example.com/api/oauth/dialog'
          scopes: 
            read:pets: Read pets data
            write:pets: Modify pets

  parameters:
    # com.anaptecs.jeaf.junit.openapi.service1.ChildBeanParameterType.childProperty
    childProperty:
      name: X-Child-Property
      in: header
      schema:
        type: string
      required: true

    # com.anaptecs.jeaf.junit.openapi.service1.LocalBeanParamType.localID
    localID:
      name: localID
      in: header
      schema:
        type: string
      required: true

    # com.anaptecs.jeaf.junit.openapi.service1.LocalBeanParamType.localKey
    localKey:
      name: localKey
      in: header
      schema:
        type: string
      required: true

  responses:
    # com.anaptecs.jeaf.junit.openapi.service1.error.ConflictResponse
    ConflictResponse:
      description: TODO Please add comment to error response type
      content:
        application/problem+json:
          schema:
            $ref: '../base/product-base.yml#/components/schemas/Problem'

    # com.anaptecs.jeaf.junit.openapi.service1.CustomErrorResponse
    CustomErrorResponse:
      description: TODO Please add comment to error response type
      content:
        text/plain:
          schema:
            $ref: '../base/product-base.yml#/components/schemas/Problem'

    # com.anaptecs.jeaf.junit.openapi.service1.NoContentResponse
    NoContentResponse:
      description: TODO Please add comment to error response type
      content:
        application/json:
          schema:
            $ref: '../base/product-base.yml#/components/schemas/Problem'


  schemas:
    # com.anaptecs.jeaf.junit.rest.generics.BusinessServiceObject
    BusinessServiceObject:
      type: object
      additionalProperties: false
    # com.anaptecs.jeaf.junit.rest.generics.Message
    Message:
      type: object
      additionalProperties: false
    # com.anaptecs.jeaf.junit.rest.generics.MyGenericListResponse
    MyGenericListResponse:
      type: object
      additionalProperties: false
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        values:
          type: array
          items:
            $ref: '#/components/schemas/BusinessServiceObject'
    # com.anaptecs.jeaf.junit.rest.generics.MyGenericRESTResponse
    MyGenericRESTResponse:
      type: object
      additionalProperties: false
      required:
        - value
      properties:
        value:
          $ref: '#/components/schemas/BusinessServiceObject'
    # com.anaptecs.jeaf.junit.rest.generics.MySecondResponse
    MySecondResponse:
      type: object
      additionalProperties: false
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        data:
          $ref: '#/components/schemas/Offer'
    # com.anaptecs.jeaf.junit.rest.generics.Offer
    Offer:
      type: object
      additionalProperties: false
    # com.anaptecs.jeaf.junit.rest.generics.OffersResponse
    OffersResponse:
      type: object
      additionalProperties: false
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Offer'
    # com.anaptecs.jeaf.junit.rest.generics.PagedBusinessObjects
    PagedBusinessObjects:
      type: object
      additionalProperties: false
      required:
        - size
      properties:
        objects:
          type: array
          items:
            $ref: '#/components/schemas/BusinessServiceObject'
        size:
          type: integer
          format: int32
          nullable: false
    # com.anaptecs.jeaf.junit.rest.generics.PagedBusinessObjectsResponse
    PagedBusinessObjectsResponse:
      type: object
      additionalProperties: false
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        data:
          $ref: '#/components/schemas/PagedBusinessObjects'
    # com.anaptecs.jeaf.junit.openapi.service1.Sale
    Sale:
      type: object
      additionalProperties: false
      description: |
        Chännel
        €
        Ö
      required:
        - transactionAmount
      properties:
        transactionAmount:
          type: number
          format: double
          nullable: false
        sale:
          $ref: '../base/product-base.yml#/components/schemas/Channel'

      
      
