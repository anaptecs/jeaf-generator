
# File contains configuration for external REST resource ProductService
# URL to external service
externalServiceURL: TODO: Please configure URL of external REST resource

# Domain of the cookie that is used in requests.
cookieDomain:

# Path of the cookie that is used in requests.
cookiePath:

# List of http header names that should be considered to be sensitive.
sensitiveHeaders: 
 - Authorzation

# Parameter defines if http requests should be traced.
traceRequests: true

# Parameter defines if http responses should be traced.
traceResponses: false

# Apache HTTP Client configuration
httpClientConfiguration:
  # Maximum size of the connection pool.
  maxPoolSize: 5
  
  # Maximum amount of idle connections in the connection pool.
  maxIdleConnections: 5
  
  # Keep alive duration for connection to proxy target (in milliseconds)
  keepAliveDuration: 20000
  
  #  Parameter configures the time period in milliseconds after which a connection is validated before it is taken 
  # from the pool again.    
  validateAfterInactivityDuration: 10000
  
  # Maximum amount of retries before a call to the REST service is considered to be failed.
  # Be aware that in case of enabled retires server side must support idempotency on writes.
  maxRetries: 0
  
  # Interval in milliseconds after which the REST service is called again in case that retries are configured.
  retryInterval: 100
  
  # Response timeout in milliseconds for calls to REST service. Please be aware that this is a very sensitive 
  # parameter and needs to be fine-tuned for your purposes.
  responseTimeout: 5000
  
  # Timeout in milliseconds to establish connections to the REST service. As connections are pooled this parameter
  # should not have a too strong influence on the overall behavior. However please ensure that it fits to your
  # environment.
  connectTimeout: 2000
   
  # Timeout in milliseconds when requesting a connection from the pool of http connections. This parameter especially
  # becomes important in cases where a connection pool is configured too small or in cases of unexpected high load.
  connectionRequestTimeout: 100

# Resilience4J circuit breaker configuration
circuitBreakerConfiguration:
  # Failure rate threshold (percent of requests) defines which amount of failed request must be exceeded due to
  # technical problems that the circuit breaker opens and no further request will be sent to the REST service.
  #  
  # Value must between 0 and 100.
  failureRateThreshold: 5
  
  # Duration in milliseconds that the circuit breaker stays open until request will be sent to the REST service again.
  # 
  # The value must be zero or greater.
  durationInOpenState: 20000
  
  # Configures the duration in milliseconds above which calls are considered as slow and increase the slow calls
  # percentage.
  # 
  # The value must be zero or greater.
  slowRequestDuration: 5000
  
  # Configures the slow request threshold in percentage. The circuit breaker considers a call as slow when the call
  # duration is greater than <code>slowCallDuration</code>. When the percentage of slow calls is equal to or greater
  # than the threshold, the circuit breaker transitions to open and starts short-circuiting calls.
  # 
  # Value must between 0 and 100.
  slowRequestRateThreshold: 30
  
  # Configures the number of permitted calls when the circuit breaker is half open.
  # 
  # The value must be zero or greater.
  permittedCallsInHalfOpenState: 2
  
  # Configures the size of the sliding window in seconds which is used to record the outcome of calls when the circuit
  # breaker is closed.
  # 
  # The value must be greater than 0.
  slidingWindowSizeSeconds: 5
